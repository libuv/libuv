name: release-windows

on:
  release:
    types: [published]

jobs:
  windows:
    name: windows-build (${{ matrix.arch }})
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        arch: [x64, Win32]
    steps:
      - uses: ilammy/msvc-dev-cmd@v1
        with:
          arch: ${{ matrix.arch }}
      - uses: actions/checkout@v4
      - name: Configure
        run: |
            mkdir build
            cd build
            cmake .. -D BUILD_TESTING=OFF -A ${{ matrix.arch }}
      - name: Build
        run: |
            cd build
            cmake --build . --config Release
      - name: Create binary archive from release
        run: |
             mkdir libuv-${{ github.event.release.tag_name }}-${{ matrix.arch }}\bin
             mkdir libuv-${{ github.event.release.tag_name }}-${{ matrix.arch }}\lib
             move include libuv-${{ github.event.release.tag_name }}-${{ matrix.arch }}\
             move build/Release/uv.lib libuv-${{ github.event.release.tag_name }}-${{ matrix.arch }}\lib\
             move build/Release/uv.dll libuv-${{ github.event.release.tag_name }}-${{ matrix.arch }}\bin\
             7z a libuv-${{ github.event.release.tag_name }}-${{ matrix.arch }}.zip libuv-${{ github.event.release.tag_name }}-${{ matrix.arch }}\* -tzip -y
      - name: Upload the windows binary artifacts
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: libuv-${{ github.event.release.tag_name }}-${{ matrix.arch }}.zip
          asset_name: libuv-${{ github.event.release.tag_name }}-${{ matrix.arch }}-windows
          tag: ${{ github.ref }}
          overwrite: true
          file_glob: true
          body: "Windows binary - 'libuv' .dll, .lib, and .h headers."
